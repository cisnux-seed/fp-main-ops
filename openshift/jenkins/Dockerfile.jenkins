FROM jenkins/jenkins:lts

# Switch to root to install tools
USER root

# Install base dependencies
RUN apt-get update && \
    apt-get install -y curl wget unzip apt-transport-https ca-certificates gnupg lsb-release \
    python3 python3-pip python3-venv sshpass && \
    rm -rf /var/lib/apt/lists/*

# Install Podman
RUN echo "deb https://download.opensuse.org/repositories/devel:/kubic:/libcontainers:/stable/xUbuntu_22.04/ /" > /etc/apt/sources.list.d/devel:kubic:libcontainers:stable.list && \
    curl -fsSL https://download.opensuse.org/repositories/devel:kubic:libcontainers:stable/xUbuntu_22.04/Release.key | gpg --dearmor > /etc/apt/trusted.gpg.d/devel_kubic_libcontainers_stable.gpg && \
    apt-get update && \
    apt-get install -y podman buildah skopeo && \
    rm -rf /var/lib/apt/lists/*

# Configure Podman for rootless operation
RUN echo "jenkins:100000:65536" >> /etc/subuid && \
    echo "jenkins:100000:65536" >> /etc/subgid

# Install Terraform
ARG TERRAFORM_VERSION=1.12.2
RUN wget -O terraform.zip https://releases.hashicorp.com/terraform/${TERRAFORM_VERSION}/terraform_${TERRAFORM_VERSION}_linux_amd64.zip && \
    unzip terraform.zip && \
    mv terraform /usr/local/bin/ && \
    chmod +x /usr/local/bin/terraform && \
    rm terraform.zip

# Install Google Cloud CLI
RUN echo "deb [signed-by=/usr/share/keyrings/cloud.google.gpg] https://packages.cloud.google.com/apt cloud-sdk main" | tee -a /etc/apt/sources.list.d/google-cloud-sdk.list && \
    curl https://packages.cloud.google.com/apt/doc/apt-key.gpg | apt-key --keyring /usr/share/keyrings/cloud.google.gpg add - && \
    apt-get update && \
    apt-get install -y google-cloud-cli && \
    apt-get clean && \
    rm -rf /var/lib/apt/lists/*

# Install OpenShift CLI
RUN curl -L https://mirror.openshift.com/pub/openshift-v4/clients/oc/latest/linux/oc.tar.gz -o oc.tar.gz && \
    tar -xzf oc.tar.gz && \
    chmod +x oc && \
    mv oc /usr/local/bin/oc && \
    rm oc.tar.gz

# Install ansible
RUN pip3 install --break-system-packages ansible --no-cache-dir

# Add jenkins user to root group for OpenShift compatibility
RUN usermod -aG root jenkins

# Switch back to jenkins user
USER jenkins

# Configure Podman for Jenkins user
RUN mkdir -p $HOME/.config/containers && \
    echo '[containers]' > $HOME/.config/containers/containers.conf && \
    echo 'userns="host"' >> $HOME/.config/containers/containers.conf && \
    echo 'ipcns="host"' >> $HOME/.config/containers/containers.conf && \
    echo 'utsns="host"' >> $HOME/.config/containers/containers.conf && \
    echo 'cgroupns="host"' >> $HOME/.config/containers/containers.conf && \
    echo 'cgroups="disabled"' >> $HOME/.config/containers/containers.conf && \
    echo 'log_driver = "k8s-file"' >> $HOME/.config/containers/containers.conf

# Enable QEMU for multi-platform builds
USER root
RUN apt-get update && \
    apt-get install -y qemu-user-static binfmt-support && \
    rm -rf /var/lib/apt/lists/*

USER jenkins

# Create podman alias for docker compatibility and set up buildah for multi-platform
RUN echo 'alias docker=podman' >> $HOME/.bashrc && \
    echo 'alias docker-buildx="buildah bud"' >> $HOME/.bashrc

# Configure multi-platform support
RUN mkdir -p $HOME/.config/containers/registries.d && \
    echo 'unqualified-search-registries = ["docker.io"]' > $HOME/.config/containers/registries.conf

# Install Jenkins plugins (updated for Podman compatibility)
RUN jenkins-plugin-cli --plugins \
    workflow-aggregator \
    pipeline-stage-view \
    pipeline-build-step \
    pipeline-input-step \
    pipeline-milestone-step \
    pipeline-graph-analysis \
    docker-workflow \
    docker-commons \
    github \
    github-branch-source \
    git \
    dark-theme \
    blueocean \
    terraform \
    ansible \
    kubernetes \
    openshift-client