pipeline {
    agent any

    stages {
        stage('Set OpenShift Project') {
            steps {
                // Buat atau pindah ke project observability‑one‑gate‑payment
                sh 'oc new-project observability-one-gate-payment || oc project observability-one-gate-payment'
            }
        }

        stage('Write Prometheus YAML') {
            steps {
                writeFile file: 'prometheus.yaml', text: '''
apiVersion: v1
kind: ServiceAccount
metadata:
  name: prometheus
  namespace: observability-one-gate-payment
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: prometheus
rules:
  - apiGroups: [""]
    resources:
      - nodes
      - nodes/proxy
      - services
      - endpoints
      - pods
    verbs: ["get", "list", "watch"]
  - apiGroups:
      - extensions
      - apps
    resources:
      - replicasets
      - deployments
    verbs: ["get", "list", "watch"]
  - nonResourceURLs: ["/metrics"]
    verbs: ["get"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: prometheus
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: prometheus
subjects:
  - kind: ServiceAccount
    name: prometheus
    namespace: observability-one-gate-payment
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: prometheus-pvc
  namespace: observability-one-gate-payment
spec:
  accessModes: [ReadWriteOnce]
  resources:
    requests:
      storage: 10Gi
  storageClassName: standard-csi
---
apiVersion: v1
kind: Service
metadata:
  name: prometheus
  namespace: observability-one-gate-payment
spec:
  type: ClusterIP
  ports:
    - port: 9090
      targetPort: 9090
      protocol: TCP
      name: web
  selector:
    app: prometheus
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: prometheus
  namespace: observability-one-gate-payment
spec:
  replicas: 1
  selector:
    matchLabels:
      app: prometheus
  template:
    metadata:
      labels:
        app: prometheus
    spec:
      serviceAccountName: prometheus
      containers:
        - name: prometheus
          # gunakan quay.io agar bebas rate‑limit
          image: quay.io/prometheus/prometheus:v2.52.0
          args:
            - "--config.file=/etc/prometheus/prometheus.yml"
            - "--storage.tsdb.path=/prometheus"
          ports:
            - containerPort: 9090
          volumeMounts:
            - name: config-volume
              mountPath: /etc/prometheus/
            - name: storage
              mountPath: /prometheus
      volumes:
        - name: config-volume
          configMap:
            name: prometheus-config
        - name: storage
          persistentVolumeClaim:
            claimName: prometheus-pvc
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: prometheus-config
  namespace: observability-one-gate-payment
data:
  prometheus.yml: |
    global:
      scrape_interval: 15s
      evaluation_interval: 15s
    scrape_configs:
      - job_name: prometheus
        static_configs:
          - targets: ['localhost:9090']
'''
            }
        }

        stage('Write Route YAML') {
            steps {
                writeFile file: 'prometheus-route.yaml', text: '''
apiVersion: route.openshift.io/v1
kind: Route
metadata:
  name: prometheus
  namespace: observability-one-gate-payment
spec:
  to:
    kind: Service
    name: prometheus
  port:
    targetPort: web
  tls:
    termination: edge
  host: prometheus.apps.ocp-one-gate-payment.skynux.fun
'''
            }
        }

        stage('Apply YAMLs to OpenShift') {
            steps {
                sh 'oc apply -f prometheus.yaml'
                sh 'oc apply -f prometheus-route.yaml'
            }
        }
    }

    post {
        success {
            echo '✅ Prometheus berhasil dideploy di observability-one-gate-payment.'
        }
        failure {
            echo '❌ Deploy Prometheus gagal. Periksa log dan konfigurasi.'
        }
    }
}
