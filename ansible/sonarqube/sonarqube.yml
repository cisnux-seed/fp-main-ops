---
- name: Install SonarQube on Debian 11
  hosts: sonarqube_servers
  become: yes
  vars:
    sonarqube_version: "10.7.0.96327"
    sonarqube_user: "sonarqube"
    sonarqube_group: "sonarqube"
    sonarqube_home: "/opt/sonarqube"
    postgres_version: "13"
    postgres_user: "sonarqube"
    postgres_password: "sonarqube_password"
    postgres_db: "sonarqube"
    java_version: "17"

  tasks:
    - name: Update apt cache
      apt:
        update_cache: yes
        cache_valid_time: 3600

    - name: Install required packages
      apt:
        name:
          - curl
          - wget
          - unzip
          - apt-transport-https
          - ca-certificates
          - gnupg
          - lsb-release
        state: present

    - name: Install OpenJDK 17
      apt:
        name: openjdk-17-jdk
        state: present

    - name: Set JAVA_HOME environment variable
      lineinfile:
        path: /etc/environment
        line: 'JAVA_HOME="/usr/lib/jvm/java-17-openjdk-amd64"'
        create: yes

    - name: Install PostgreSQL
      apt:
        name:
          - postgresql-{{ postgres_version }}
          - postgresql-contrib-{{ postgres_version }}
          - python3-psycopg2
          - acl
        state: present

    - name: Start and enable PostgreSQL service
      systemd:
        name: postgresql
        state: started
        enabled: yes

    - name: Create PostgreSQL user for SonarQube
      shell: |
        sudo -u postgres psql -c "CREATE USER {{ postgres_user }} WITH PASSWORD '{{ postgres_password }}';" || true
      register: create_user_result
      changed_when: "'already exists' not in create_user_result.stderr"

    - name: Create PostgreSQL database for SonarQube
      shell: |
        sudo -u postgres psql -c "CREATE DATABASE {{ postgres_db }} OWNER {{ postgres_user }};" || true
      register: create_db_result
      changed_when: "'already exists' not in create_db_result.stderr"

    - name: Grant privileges to SonarQube user
      shell: |
        sudo -u postgres psql -c "GRANT ALL PRIVILEGES ON DATABASE {{ postgres_db }} TO {{ postgres_user }};" || true

    - name: Create SonarQube system group
      group:
        name: "{{ sonarqube_group }}"
        system: yes
        state: present

    - name: Create SonarQube system user
      user:
        name: "{{ sonarqube_user }}"
        group: "{{ sonarqube_group }}"
        system: yes
        shell: /bin/bash
        home: "{{ sonarqube_home }}"
        create_home: no
        state: present

    - name: Create SonarQube directory
      file:
        path: "{{ sonarqube_home }}"
        state: directory
        owner: "{{ sonarqube_user }}"
        group: "{{ sonarqube_group }}"
        mode: '0755'

    - name: Download SonarQube
      get_url:
        url: "https://binaries.sonarsource.com/Distribution/sonarqube/sonarqube-{{ sonarqube_version }}.zip"
        dest: "/tmp/sonarqube-{{ sonarqube_version }}.zip"
        mode: '0644'

    - name: Extract SonarQube
      unarchive:
        src: "/tmp/sonarqube-{{ sonarqube_version }}.zip"
        dest: "/tmp"
        remote_src: yes

    - name: Move SonarQube files to installation directory
      shell: |
        mv /tmp/sonarqube-{{ sonarqube_version }}/* {{ sonarqube_home }}/
        chown -R {{ sonarqube_user }}:{{ sonarqube_group }} {{ sonarqube_home }}
      args:
        creates: "{{ sonarqube_home }}/bin"

    - name: Configure SonarQube properties
      template:
        src: sonar.properties.j2
        dest: "{{ sonarqube_home }}/conf/sonar.properties"
        owner: "{{ sonarqube_user }}"
        group: "{{ sonarqube_group }}"
        mode: '0644'
        backup: yes

    - name: Set kernel parameters for SonarQube
      sysctl:
        name: "{{ item.name }}"
        value: "{{ item.value }}"
        state: present
        sysctl_file: /etc/sysctl.d/99-sonarqube.conf
        reload: yes
      loop:
        - { name: 'vm.max_map_count', value: '524288' }
        - { name: 'fs.file-max', value: '131072' }

    - name: Set ulimits for SonarQube user
      blockinfile:
        path: /etc/security/limits.conf
        block: |
          {{ sonarqube_user }} soft nofile 131072
          {{ sonarqube_user }} hard nofile 131072
          {{ sonarqube_user }} soft nproc 8192
          {{ sonarqube_user }} hard nproc 8192
        marker: "# {mark} ANSIBLE MANAGED BLOCK - SonarQube limits"

    - name: Create SonarQube systemd service file
      template:
        src: sonarqube.service.j2
        dest: /etc/systemd/system/sonarqube.service
        mode: '0644'
      notify: reload systemd

    - name: Clean up downloaded files
      file:
        path: "/tmp/sonarqube-{{ sonarqube_version }}.zip"
        state: absent

    - name: Clean up extracted directory
      file:
        path: "/tmp/sonarqube-{{ sonarqube_version }}"
        state: absent

    - name: Start and enable SonarQube service
      systemd:
        name: sonarqube
        state: started
        enabled: yes
        daemon_reload: yes

    - name: Wait for SonarQube to start
      wait_for:
        port: 9000
        host: localhost
        delay: 30
        timeout: 300

    - name: Display SonarQube access information
      debug:
        msg: |
          SonarQube has been installed successfully!
          Access URL: http://{{ ansible_default_ipv4.address }}:9000
          Default credentials: admin/admin
          Please change the default password after first login.

  handlers:
    - name: reload systemd
      systemd:
        daemon_reload: yes

# Create templates directory structure:
# templates/
# ├── sonar.properties.j2
# └── sonarqube.service.j2